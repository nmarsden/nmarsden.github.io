!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){Object.extend=function(e){if(null==e)return e;for(var t=1;t<arguments.length;t++){var n=arguments[t];if(null!=n)for(var a in n){var o=n.__lookupGetter__(a),i=n.__lookupSetter__(a);o||i?(o&&e.__defineGetter__(a,o),i&&e.__defineSetter__(a,i)):e[a]=n[a]}}return e},e.exports={onePageScroll:function(e,t){var n=Object.extend({},{sectionContainer:"section",easing:"ease",animationTime:1e3,pagination:!0,updateURL:!1,keyboard:!0,beforeMove:null,afterMove:null,loop:!1,responsiveFallback:!1},t),a=document.querySelector(e),o=document.querySelectorAll(n.sectionContainer),i=o.length,r=0,s="",l=document.querySelector("body");this.init=function(){_addClass(a,"onepage-wrapper"),a.style.position="relative";for(var e=0;e<o.length;e++)_addClass(o[e],"ops-section"),o[e].dataset.index=e+1,100,1==n.pagination&&(s+="<li><a data-index='"+(e+1)+"' href='#"+(e+1)+"'></a></li>");if(_swipeEvents(a),document.addEventListener("swipeDown",(function(e){_hasClass(l,"disabled-onepage-scroll")||e.preventDefault(),moveUp(a)})),document.addEventListener("swipeUp",(function(e){_hasClass(l,"disabled-onepage-scroll")||e.preventDefault(),moveDown(a)})),1==n.pagination){var t=document.createElement("ul");t.setAttribute("class","onepage-pagination"),l.appendChild(t),t.innerHTML=s;var i=document.querySelector(".onepage-pagination").offsetHeight/2*-1;document.querySelector(".onepage-pagination").style.marginTop=i}if(""!=window.location.hash&&"#1"!=window.location.hash){var r=window.location.hash.replace("#",""),d=document.querySelector(n.sectionContainer+"[data-index='"+r+"']"),c=d.dataset.index;if(_addClass(document.querySelector(n.sectionContainer+"[data-index='"+r+"']"),"active"),_addClass(l,"viewing-page-"+r),1==n.pagination&&_addClass(document.querySelector(".onepage-pagination li a[data-index='"+r+"']"),"active"),d&&(_addClass(d,"active"),1==n.pagination&&_addClass(document.querySelector(".onepage-pagination li a[data-index='"+r+"']"),"active"),l.className=l.className.replace(/\bviewing-page-\d.*?\b/g,""),_addClass(l,"viewing-page-"+c),history.replaceState&&1==n.updateURL)){var u=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+r;history.pushState({},document.title,u)}_transformPage(a,n,100*(r-1)*-1,r)}else _addClass(document.querySelector(n.sectionContainer+"[data-index='1']"),"active"),_addClass(l,"viewing-page-1"),1==n.pagination&&_addClass(document.querySelector(".onepage-pagination li a[data-index='1']"),"active");if(_paginationHandler=function(){var e=this.dataset.index;moveTo(a,e)},1==n.pagination){var p=document.querySelectorAll(".onepage-pagination li a");for(e=0;e<p.length;e++)p[e].addEventListener("click",_paginationHandler)}return _mouseWheelHandler=function(e){e.preventDefault();var t=e.wheelDelta||-e.detail;_hasClass(l,"disabled-onepage-scroll")||_init_scroll(e,t)},document.addEventListener("mousewheel",_mouseWheelHandler),document.addEventListener("DOMMouseScroll",_mouseWheelHandler),0!=n.responsiveFallback&&(window.onresize=function(){_responsive()},_responsive()),_keydownHandler=function(e){var t=e.target.tagName.toLowerCase();if(!_hasClass(l,"disabled-onepage-scroll"))switch(e.which){case 38:"input"!=t&&"textarea"!=t&&moveUp(a);break;case 40:"input"!=t&&"textarea"!=t&&moveDown(a);break;default:return}return!1},1==n.keyboard&&(document.onkeydown=_keydownHandler),!1},_swipeEvents=function(e){var t,n;function a(e){var o=e.touches;if(o&&o.length){e.preventDefault();var i=t-o[0].pageX,r=n-o[0].pageY;if(i>=50){e=new Event("swipeLeft");document.dispatchEvent(e)}if(i<=-50){e=new Event("swipeRight");document.dispatchEvent(e)}if(r>=50){e=new Event("swipeUp");document.dispatchEvent(e)}if(r<=-50){e=new Event("swipeDown");document.dispatchEvent(e)}(Math.abs(i)>=50||Math.abs(r)>=50)&&document.removeEventListener("touchmove",a)}}document.addEventListener("touchstart",(function(e){var o=e.touches;o&&o.length&&(t=o[0].pageX,n=o[0].pageY,document.addEventListener("touchmove",a))}))},_trim=function(e){return e.replace(/^\s\s*/,"").replace(/\s\s*$/,"")},_hasClass=function(e,t){return e.className?e.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)")):e.className=t},_addClass=function(e,t){_hasClass(e,t)||(e.className+=" "+t),e.className=_trim(e.className)},_removeClass=function(e,t){if(_hasClass(e,t)){var n=new RegExp("(\\s|^)"+t+"(\\s|$)");e.className=e.className.replace(n," ")}e.className=_trim(e.className)},_whichTransitionEvent=function(){var e,t=document.createElement("fakeelement"),n={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in n)if(void 0!==t.style[e])return n[e]},_scrollTo=function(e,t,n){if(!(n<0)){var a=(t-e.scrollTop)/n*10;setTimeout((function(){e.scrollTop=e.scrollTop+a,e.scrollTop!=t&&_scrollTo(e,t,n-10)}),10)}},_transformPage=function(e,t,n,a,o){"function"==typeof t.beforeMove&&t.beforeMove(a,o);var i="-webkit-transform: translate3d(0, "+n+"%, 0); -webkit-transition: -webkit-transform "+t.animationTime+"ms "+t.easing+"; -moz-transform: translate3d(0, "+n+"%, 0); -moz-transition: -moz-transform "+t.animationTime+"ms "+t.easing+"; -ms-transform: translate3d(0, "+n+"%, 0); -ms-transition: -ms-transform "+t.animationTime+"ms "+t.easing+"; transform: translate3d(0, "+n+"%, 0); transition: transform "+t.animationTime+"ms "+t.easing+";";e.style.cssText=i;var r=_whichTransitionEvent();e.addEventListener(r,(function n(){"function"==typeof t.afterMove&&t.afterMove(a,o);e.removeEventListener(r,n)}),!1)},_responsive=function(){document.body.clientWidth<n.responsiveFallback?(_addClass(l,"disabled-onepage-scroll"),document.removeEventListener("mousewheel",_mouseWheelHandler),document.removeEventListener("DOMMouseScroll",_mouseWheelHandler),_swipeEvents(a),document.removeEventListener("swipeDown"),document.removeEventListener("swipeUp")):(_hasClass(l,"disabled-onepage-scroll")&&(_removeClass(l,"disabled-onepage-scroll"),_scrollTo(document.documentElement,0,2e3)),_swipeEvents(a),document.addEventListener("swipeDown",(function(e){_hasClass(l,"disabled-onepage-scroll")||e.preventDefault(),moveUp(a)})),document.addEventListener("swipeUp",(function(e){_hasClass(l,"disabled-onepage-scroll")||e.preventDefault(),moveDown(a)})),document.addEventListener("mousewheel",_mouseWheelHandler),document.addEventListener("DOMMouseScroll",_mouseWheelHandler))},_init_scroll=function(e,t){var o=t,i=(new Date).getTime();i-r<500+n.animationTime?e.preventDefault():(o<0?moveDown(a):moveUp(a),r=i)},this.moveDown=function(e){"string"==typeof e&&(e=document.querySelector(e));var t=document.querySelector(n.sectionContainer+".active").dataset.index,a=document.querySelector(n.sectionContainer+"[data-index='"+t+"']"),o=document.querySelector(n.sectionContainer+"[data-index='"+(parseInt(t)+1)+"']");if(o)pos=100*t*-1;else{if(1!=n.loop)return;pos=0,o=document.querySelector(n.sectionContainer+"[data-index='1']")}var i=o.dataset.index;if(_removeClass(a,"active"),_addClass(o,"active"),1==n.pagination&&(_removeClass(document.querySelector(".onepage-pagination li a[data-index='"+t+"']"),"active"),_addClass(document.querySelector(".onepage-pagination li a[data-index='"+i+"']"),"active")),l.className=l.className.replace(/\bviewing-page-\d.*?\b/g,""),_addClass(l,"viewing-page-"+i),history.replaceState&&1==n.updateURL){var r=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(parseInt(t)+1);history.pushState({},document.title,r)}_transformPage(e,n,pos,i,o)},this.moveUp=function(e){"string"==typeof e&&(e=document.querySelector(e));var t=document.querySelector(n.sectionContainer+".active").dataset.index,a=document.querySelector(n.sectionContainer+"[data-index='"+t+"']"),o=document.querySelector(n.sectionContainer+"[data-index='"+(parseInt(t)-1)+"']");if(o)pos=100*(o.dataset.index-1)*-1;else{if(1!=n.loop)return;pos=100*(i-1)*-1,o=document.querySelector(n.sectionContainer+"[data-index='"+i+"']")}var r=o.dataset.index;if(_removeClass(a,"active"),_addClass(o,"active"),1==n.pagination&&(_removeClass(document.querySelector(".onepage-pagination li a[data-index='"+t+"']"),"active"),_addClass(document.querySelector(".onepage-pagination li a[data-index='"+r+"']"),"active")),l.className=l.className.replace(/\bviewing-page-\d.*?\b/g,""),_addClass(l,"viewing-page-"+r),history.replaceState&&1==n.updateURL){var s=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(parseInt(t)-1);history.pushState({},document.title,s)}_transformPage(e,n,pos,r,o)},this.moveTo=function(e,t){"string"==typeof e&&(e=document.querySelector(e));var a=document.querySelector(n.sectionContainer+".active"),o=document.querySelector(n.sectionContainer+"[data-index='"+t+"']");if(o){var i=o.dataset.index;if(_removeClass(a,"active"),_addClass(o,"active"),_removeClass(document.querySelector(".onepage-pagination li a.active"),"active"),_addClass(document.querySelector(".onepage-pagination li a[data-index='"+t+"']"),"active"),l.className=l.className.replace(/\bviewing-page-\d.*?\b/g,""),_addClass(l,"viewing-page-"+i),pos=100*(t-1)*-1,history.replaceState&&1==n.updateURL){var r=window.location.href.substr(0,window.location.href.indexOf("#"))+"#"+(parseInt(t)-1);history.pushState({},document.title,r)}_transformPage(e,n,pos,t,o)}},this.init()}}},function(e,t,n){"use strict";n.r(t);n(2),n(3);var a=n(0);Object(a.onePageScroll)(".main",{sectionContainer:".scroll-step",easing:"ease",animationTime:600,pagination:!1,updateURL:!1,loop:!1,keyboard:!0,responsiveFallback:!1});document.querySelector(".loader").style.display="none";document.querySelector(".main").style.display="block"},function(e,t,n){},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,